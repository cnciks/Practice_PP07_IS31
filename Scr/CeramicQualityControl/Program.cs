using CeramicQualityControl.Data;
using Microsoft.EntityFrameworkCore;

namespace CeramicQualityControl
{
    internal static class Program
    {
        [STAThread]
        static void Main()
        {
            ApplicationConfiguration.Initialize();

            // –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
            TestDatabaseConnection();

            Application.Run(new MainForm());
        }

        static void TestDatabaseConnection()
        {
            try
            {
                using var context = new AppDbContext();

                // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
                var canConnect = context.Database.CanConnect();
                MessageBox.Show($"üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ: {canConnect}", "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞");

                if (canConnect)
                {
                    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
                    var roles = context.Roles.ToList();
                    var users = context.Users.ToList();

                    MessageBox.Show($"üìä –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ:\n" +
                                   $"–†–æ–ª–µ–π: {roles.Count}\n" +
                                   $"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users.Count}\n" +
                                   $"–¢–∞–±–ª–∏—Ü—ã: Parties, Products, Defects, ResultControls",
                                   "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {ex.Message}", "–û—à–∏–±–∫–∞");
            }
        }
    }
}
